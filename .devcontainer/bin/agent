#!/bin/bash

# Agent wrapper for claude command with Honeycomb telemetry support
# This script sets up the environment variables needed for telemetry
# and then executes the claude command with all passed arguments

# Load environment variables from .devcontainer/.env if it exists
if [ -f "/workspaces/tetraspore/.devcontainer/.env" ]; then
    set -a  # Enable auto-export for all variables
    source "/workspaces/tetraspore/.devcontainer/.env"
    set +a  # Disable auto-export
fi

# Validate Honeycomb API key
if [ -z "$HONEYCOMB_API_KEY" ] || [ "$HONEYCOMB_API_KEY" = "your_actual_api_key_here" ]; then
    echo "⚠️  Warning: Honeycomb API key not configured (telemetry disabled)"
else
    # Extract base domain for validation
    if [[ "$OTEL_EXPORTER_OTLP_ENDPOINT" == *"eu1"* ]]; then
        VALIDATION_URL="https://api.eu1.honeycomb.io/1/auth"
    else
        VALIDATION_URL="https://api.honeycomb.io/1/auth"
    fi
    
    # Check if key works (2 second timeout)
    if ! curl -s -f -m 2 -H "X-Honeycomb-Team: $HONEYCOMB_API_KEY" "$VALIDATION_URL" > /dev/null 2>&1; then
        echo "⚠️  Warning: Honeycomb API key validation failed (endpoint: $VALIDATION_URL)"
    fi
fi

# Validate Tavily API key
if [ -z "$TAVILY_API_KEY" ] || [ "$TAVILY_API_KEY" = "your_tavily_api_key_here" ]; then
    echo "⚠️  Warning: Tavily API key not configured (web search disabled)"
else
    # Check if key works using usage endpoint (2 second timeout)
    if ! curl -s -f -m 2 -H "Authorization: Bearer $TAVILY_API_KEY" "https://api.tavily.com/usage" > /dev/null 2>&1; then
        echo "⚠️  Warning: Tavily API key validation failed"
    fi
fi

# Execute claude command with all arguments
# Include --dangerously-skip-permissions by default for smoother AI workflows
exec claude --dangerously-skip-permissions "$@"